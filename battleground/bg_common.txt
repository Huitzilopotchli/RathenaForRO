/**
 * Hercules Script
 *
 * Feature: Hercules Battlegrounds
 * Version: 1.0
 * Author: Smokexyz
 *
 * Description: Hercules Battlegrounds plugin.
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

/**
 * Map Flags
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

bat_room	mapflag	nomemo
bat_room	mapflag	nowarpto
bat_room	mapflag	nobranch
bat_room	mapflag	nopenalty
bat_room	mapflag	noteleport
bat_room	mapflag	nosave	SavePoint
// This mapflag is required to join battleground queues.
bat_room	mapflag	town

function	script	get_arena_id	{
	set .@arena$, getarg(0);

	if (strcmp(.@arena$, "Flavius_CTF") == 0) {
		return 1;
	} else if (strcmp(.@arena$, "Tierra_EOS") == 0) {
		return 2;
	} else if (strcmp(.@arena$, "Tierra_TI") == 0) {
		return 3;
	} else if (strcmp(.@arena$, "Flavius_TD") == 0) {
		return 4;
	} else if (strcmp(.@arena$, "Tierra_Boss") == 0) {
		return 5;
	} else if (strcmp(.@arena$, "Conquest") == 0) {
		return 6;
	} else if (strcmp(.@arena$, "Flavius_SC") == 0) {
		return 7;
	} else if (strcmp(.@arena$, "Tierra_DOM") == 0) {
		return 8;
	} else if (strcmp(.@arena$, "Rush") == 0) {
		return 9;
	}

	return 0;
}
/**
 * Battleground Queue Handler
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
-	script	BG_Queue_Handler	FAKE_NPC,{
	end;

OnInit:
	// Arena Configuration
	// All Arena settings are listed below, newer ones can be appended to the arrays.
	// Arenas when listed will be available in the auto-rotation.
	setarray .BG_Arenas$[0],       "Flavius_CTF",    "Tierra_EOS",   "Tierra_TI",     "Flavius_TD", "Tierra_Boss","Conquest",  "Flavius_SC",  "Tierra_DOM",   "Rush";
	// Battleground Arena Name for announcements.
	setarray .BG_Names$[0],      "Capture the Flag","Eye of Storm","Triple Inferno","Team DeathMatch","Bossnia",  "Conquest",  "Stone Control","Domination",   "Rush";
	// Minimum Players required to start the Battleground.
	setarray .BG_Players_Min[0],        1,               1,               1,              1,            1,           5,             1,             1,            1;
	// Maximum Players per Team
	setarray .BG_Players_Max[0],        35,              35,             35,              35,           35,          50,            35,            35,           30;
	// Battleground announcement colors.
	setarray .BG_Color$[0],         "0x2F9F2D",      "0xAA00FF",      "0xFF0033",     "0x33FF99",   "0x3399FF",  "0xFFA500",    "0x9ACD32",    "0x4169E1",   "0xDDA0DD";
	// Battleground @bgmode interger colors.
	setarray .BG_Color2[0],         0x2F9F2D,      0xAA00FF,      0xFF0033,     0x33FF99,   0x3399FF,  0xFFA500,    0x9ACD32,    0x4169E1,   0xDDA0DD,  0x00FF00;
	// Team Building Mode :
	// 0 = Lineal [Keeps parties together]
	// 1 = Random
	.TeamBuildingMode = 1;

	// Battleground @commands (@joinbg, @leavebg).
	.BGCommandsEnabled = 1; // (1 to enable, 0 to disable)

	// Minimum Level to join the BG queue.
	.BGQueue_Level_Min = 80;

	if (.BGCommandsEnabled) {
		/* Admin / GM Commands */
		bindatcmd "bgstart","BG_Queue_Handler::OnBGStartCommand",99,99;
		bindatcmd "bgstop","BG_Queue_Handler::OnBGStopCommand",99,99;
		bindatcmd "bgmode","BG_Queue_Handler::OnBGModeCommand",99,99;
		bindatcmd "bgsize","BG_Queue_Handler::OnBGSizeCommand",99,99;
		/* Player Commands */
		bindatcmd "joinbg","BG_Queue_Handler::OnDoJoin",0,99;
		bindatcmd "leavebg","BG_Queue_Handler::OnDoLeave",0,99;
	}

	/* * * * * DO NOT TOUCH ANYTHING BELOW THIS LINE * * * * * * * * * * * * * * * */
	.TotalArenas = getarraysize(.BG_Arenas$);
	.BG_Queue = bg_queue_create("Battleground Arena","BG_Queue_Handler::OnQueueJoinEvent",.BGQueue_Level_Min);

	// Move to Next Arena
	if ($BG_Index >= .TotalArenas)
		$BG_Index = 0; // Restart Rotation

	.BG_Arena$ = .BG_Arenas$[$BG_Index];
	initnpctimer; // Initiate rotation timer.
	.bgEnabled$ = "bg_enabled";
	end;
	
// @bgmode <1-10>
OnBGModeCommand:
	.@x = atoi(.@atcmd_parameters$[0]);
	if (.@x <= .TotalArenas+1 && .@x > 0) {
		if (.@x == 1)
			set $BG_Index, rand(.TotalArenas)-1;
		else
			set $BG_Index, .@x-3;
		message strcharinfo(0),"["+.BG_Names$[$BG_Index+1]+"] has been set.";
		donpcevent "BG_Queue_Handler::OnRotate";
		end;
	} else {
		message strcharinfo(0), "Usage: @bgmode <1-"+(.TotalArenas+1)+">";
		dispbottom "#1 - Random",0xFFFFFF;
		for (.@i = 0; .@i<.TotalArenas; .@i++)
			dispbottom "#"+(.@i+2)+" - "+.BG_Names$[.@i],.BG_Color2[.@i];			
		end;
	}
		
// @bgsize <1-10> <min> <max>
OnBGSizeCommand:
	.@x = atoi(.@atcmd_parameters$[0]);
	.@x2 = atoi(.@atcmd_parameters$[1]);
	.@x3 = atoi(.@atcmd_parameters$[2]);
	if (.@x2 == 0 || .@x3 == 0) {
		message strcharinfo(0), "Usage: @bgsize <0-"+.TotalArenas+"> <min players> <max players>";
		dispbottom "#0 - All Arenas",0xFFFFFF;
		for (.@i = 0; .@i<.TotalArenas; .@i++)
			dispbottom "#"+(.@i+1)+" - "+.BG_Names$[.@i],.BG_Color2[.@i];			
		end;
	} else if (.@x2 > .@x3) {
		message strcharinfo(0), "@bgsize failed: min players is higher than max players. ";
		end;
	}	
	if (.@x <= .TotalArenas && .@x > 0) {
		message strcharinfo(0),"["+.BG_Names$[.@x-1]+"] min players is <"+.@x2+"> and max players is <"+.@x3+">.";
		setarray .BG_Players_Min[.@x-1],.@x2;
		setarray .BG_Players_Max[.@x-1],.@x3;
	} else {
		message strcharinfo(0),"[All Arenas] min players is <"+.@x2+"> and max players is <"+.@x3+">.";
		setarray .BG_Players_Min[0],.@x2,.@x2,.@x2,.@x2,.@x2,.@x2,.@x2,.@x2,.@x2;
		setarray .BG_Players_Max[0],.@x3,.@x3,.@x3,.@x3,.@x3,.@x3,.@x3,.@x3,.@x3;
	}
	end;
		
OnBGStartCommand:
	setbattleflag .bgEnabled$, 1;
	message strcharinfo(0),"Battlegrounds have been enabled.";
	donpcevent "BG_Queue_Handler::OnRotate";
	callsub OnEndArena;
OnBGStopCommand:
	setbattleflag .bgEnabled$, 0;
	message strcharinfo(0),"Battlegrounds have been disabled.";
	.@msg$ = "[Battlegrounds] Arenas and Queuing have been disabled by a Game Master.";
	announce .@msg$, 0, 0x00FFFF, 0x190, 12, 100, 100;
	if ($@Arena_Status != 0)
		donpcevent .BG_Arena$+"::OnMatchEnd";
	callsub OnEndArena;

// @joinbg
OnDoJoin:
	if (getbattleflag(.bgEnabled$) == 0) {
		message strcharinfo(0),"Battlegrounds are currently disabled.";
		end;
	} else if (checkquest(8506,PLAYTIME) == 2) {
		erasequest 8506;
	} else if (checkquest(8506,PLAYTIME) == 1) {
		dispbottom "[You are a Deserter. You can't participate until the indicator goes off]";
		end;
	}

	bg_queue_join .BG_Queue;
	end;

// @leavebg
OnDoLeave:
	bg_queue_leave .BG_Queue;
	if (getmapflag(strcharinfo(3),mf_battleground)) {
		bg_leave;
		warp "SavePoint", 0, 0;
	}
	end;

// Triggers after an arena has ended.
OnEndArena:
	set $@Arena_Status, 0;
	if ($@BG_Team1 == 0 && $@BG_Team2 == 0 && $@BG_Team3 == 0)
		end;
	// Warps teams back to the battle room.
	bg_warp $@BG_Team1,"Arunafeltz",151,87;
	bg_warp $@BG_Team2,"Arunafeltz",151,87;
	bg_warp $@BG_Team3,"Arunafeltz",151,87;
	// Destroy Teams
	if ($@BG_Team1 != 0) bg_destroy $@BG_Team1; set $@BG_Team1, 0;
	if ($@BG_Team2 != 0) bg_destroy $@BG_Team2; set $@BG_Team2, 0;
	if ($@BG_Team3 != 0) bg_destroy $@BG_Team3; set $@BG_Team3, 0;
	// Fall through
// Start Arena rotation.
OnRotate:
// Rotate every n seconds.
OnTimer30000:
	if (getbattleflag(.bgEnabled$) == 0) end;
	// Restart from index 0, if reached max.
	$BG_Index = $BG_Index + 1;
	if ($BG_Index >= .TotalArenas)
		$BG_Index = 0;

	.BG_Arena$ = .BG_Arenas$[$BG_Index];
	initnpctimer;
	// Fall through
// Called every time someone joins the Queue.
OnQueueJoinEvent:
	// BG Status Types -
	// 0 - Idle, ready to start.
	// 1 - Running, others can join.
	// 2 - Ending, Battleground is clearing up.
	if ($@Arena_Status == 2)
		end;

	.@Queue_Count = bg_queue_data(.BG_Queue,0);
	switch($@Arena_Status) {
	case 0: // Idle, ready to start.
		// Set total Arena teams
		if (.BG_Arena$ == "Tierra_TI")
			.@TotalTeams = 3;
		else
			.@TotalTeams = 2;

		// Set total minimum Arena players.
		.@Req = .BG_Players_Min[$BG_Index] * .@TotalTeams;

		// Check if the required number of players have been reached, and process.
		if (.@Queue_Count >= .@Req) {
			donpcevent .BG_Arena$ + "::OnBuildTeams";

			// Fill Teams with Queue Members
			if (.@TotalTeams == 3)
				bg_queue2teams .BG_Queue,.BG_Players_Min[$BG_Index],.BG_Players_Max[$BG_Index],.TeamBuildingMode,$@BG_Team1,$@BG_Team2,$@BG_Team3;
			else
				bg_queue2teams .BG_Queue,.BG_Players_Min[$BG_Index],.BG_Players_Max[$BG_Index],.TeamBuildingMode,$@BG_Team1,$@BG_Team2;

			// Stop Arena Rotation.
			stopnpctimer;

			// Set BG Status as Ongoing.
			$@Arena_Status = 1;

			.@msg$ = "[Battlegrounds] " + .BG_Names$[$BG_Index] + " is commencing.";
			announce .@msg$,0,.BG_Color$[$BG_Index],0x190,12,100,100;

			// Start Battleground Events.
			donpcevent .BG_Arena$ + "::OnReady";
		} else { // Required players have not been reached.
			.@msg$ = "[Battlegrounds] "+.BG_Names$[$BG_Index]+" requires "+(.@Req - .@Queue_Count)+" more player(s) to start.";
			announce .@msg$,0,.BG_Color$[$BG_Index],0x190,12,100,100;
		}
		break;
	case 1: // Running, others can join.
		if (.@Queue_Count > 0) {
			if (.BG_Arena$ == "Tierra_TI") {
				bg_balance_teams .BG_Queue,.BG_Players_Max[$BG_Index],.TeamBuildingMode,$@BG_Team1,$@BG_Team2,$@BG_Team3;
				.@BG_Count1 = bg_get_data($@BG_Team1, 0);
				.@BG_Count2 = bg_get_data($@BG_Team2, 0);
				.@BG_Count3 = bg_get_data($@BG_Team3, 0);
				.@msg$ = "[Battlegrounds] " + .BG_Names$[$BG_Index] + " is ongoing. Blue Team: " + .@BG_Count1 + "/" + .BG_Players_Max[$BG_Index] + ", Red Team: " + .@BG_Count2 + "/" + .BG_Players_Max[$BG_Index] + ", Green Team: " + .@BG_Count3 + "/" + .BG_Players_Max[$BG_Index] + ".";
			} else {
				bg_balance_teams .BG_Queue,.BG_Players_Max[$BG_Index],.TeamBuildingMode,$@BG_Team1,$@BG_Team2;
				.@BG_Count1 = bg_get_data($@BG_Team1, 0);
				.@BG_Count2 = bg_get_data($@BG_Team2, 0);
				.@msg$ = "[Battlegrounds] " + .BG_Names$[$BG_Index] + " is ongoing. Blue Team: " + .@BG_Count1 + "/" + .BG_Players_Max[$BG_Index] + ", Red Team: " + .@BG_Count2 + "/" + .BG_Players_Max[$BG_Index] + ".";
			}
			announce .@msg$, 0, .BG_Color$[$BG_Index], 0x190, 12, 100, 100;
		}
	default:
		break;
	}
	end;
}

// Battleground Therapist

-	script	Therapist	4_F_SISTER,{
	mes "[Therapist in battle]";
	mes "Just close your eyes, and take a deep breathe.";
	mes "You can be free from pain.";
	specialeffect2 EF_HEAL; percentheal 100,100;
	specialeffect2 EF_INCAGILITY; sc_start SC_INCREASEAGI,240000,10;
	specialeffect2 EF_BLESSING; sc_start SC_BLESSING,240000,10;
	repairall;
	close2;
	openstorage;
	end;
}

// Battleground Therapist Duplicates
// bg_conquest Therapist

schg_cas06,260,383,5	duplicate(Therapist)	Therapist#cq1	4_F_SISTER
schg_cas06,299,383,3	duplicate(Therapist)	Therapist#cq2	4_F_SISTER
schg_cas07,86,315,5	duplicate(Therapist)	Therapist#cq3	4_F_SISTER
schg_cas07,117,315,3	duplicate(Therapist)	Therapist#cq4	4_F_SISTER
schg_cas08,23,50,6	duplicate(Therapist)	Therapist#cq5	4_F_SISTER
schg_cas08,92,50,4	duplicate(Therapist)	Therapist#cq6	4_F_SISTER
arug_cas06,26,385,5	duplicate(Therapist)	Therapist#cq7	4_F_SISTER
arug_cas06,122,361,5	duplicate(Therapist)	Therapist#cq8	4_F_SISTER
arug_cas07,304,342,3	duplicate(Therapist)	Therapist#cq9	4_F_SISTER
arug_cas07,304,305,1	duplicate(Therapist)	Therapist#cq0	4_F_SISTER
arug_cas08,310,154,6	duplicate(Therapist)	Therapist#cqa	4_F_SISTER
arug_cas08,333,154,4	duplicate(Therapist)	Therapist#cqb	4_F_SISTER

// bg_flavius_ctf Therapist

bat_b02,390,13,5	duplicate(Therapist)	Therapist#ctf1	4_F_SISTER
bat_b02,10,293,5	duplicate(Therapist)	Therapist#ctf2	4_F_SISTER

// bg_flavius_sc Therapist

bat_b04,390,13,5	duplicate(Therapist)	Therapist#sc1	4_F_SISTER
bat_b04,10,293,5	duplicate(Therapist)	Therapist#sc2	4_F_SISTER

// bg_flavius_td Therapist

bat_b03,390,13,5	duplicate(Therapist)	Therapist#td1	4_F_SISTER
bat_b03,10,293,5	duplicate(Therapist)	Therapist#td2	4_F_SISTER

// bg_rush Therapist

rush_cas01,198,230,6	duplicate(Therapist)	Therapist#rh1	4_F_SISTER
rush_cas01,198,226,6	duplicate(Therapist)	Therapist#rh2	4_F_SISTER
rush_cas02,142,50,6	duplicate(Therapist)	Therapist#rh3	4_F_SISTER
rush_cas02,142,46,6	duplicate(Therapist)	Therapist#rh4	4_F_SISTER
rush_cas03,60,17,4	duplicate(Therapist)	Therapist#rh5	4_F_SISTER
rush_cas03,64,17,4	duplicate(Therapist)	Therapist#rh6	4_F_SISTER
rush_cas04,266,292,6	duplicate(Therapist)	Therapist#rh7	4_F_SISTER
rush_cas04,266,288,6	duplicate(Therapist)	Therapist#rh8	4_F_SISTER

// bg_tierra_boss Therapist

bat_a03,53,377,3	duplicate(Therapist)	Therapist#tb1	4_F_SISTER
bat_a03,45,18,3	duplicate(Therapist)	Therapist#tb2	4_F_SISTER

// bg_tierra_dom Therapist

bat_a04,53,377,3	duplicate(Therapist)	Therapist#DOM1	4_F_SISTER
bat_a04,45,18,3	duplicate(Therapist)	Therapist#DOM2	4_F_SISTER

// bg_tierra_eoe Therapist

bat_a02,53,377,3	duplicate(Therapist)	Therapist#eoe1	4_F_SISTER
bat_a02,45,18,3	duplicate(Therapist)	Therapist#eoe2	4_F_SISTER

// bg_tierra_ti Therapist

region_8,7,52,5	duplicate(Therapist)	Therapist#ti_1	4_F_SISTER
region_8,52,92,3	duplicate(Therapist)	Therapist#ti_2	4_F_SISTER
region_8,92,52,3	duplicate(Therapist)	Therapist#ti_3	4_F_SISTER